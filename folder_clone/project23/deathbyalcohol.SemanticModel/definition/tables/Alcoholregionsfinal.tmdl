```yaml
createOrReplace

    table Main
        lineageTag: a5cb1aeb-e9ab-4a4e-91c8-bdc64e048cbf
        column date
            dataType: datetime
            lineageTag: d1ff66ae-e16b-4a59-bc48-cda2292058c0
            summarizeBy: none
            sourceColumn: date
            annotation SummarizationSetBy = Automatic

        column employee-sales
            dataType: string
            lineageTag: 3f915693-2075-470b-8376-a249567d474c
            summarizeBy: none
            sourceColumn: [EmpID]
            annotation SummarizationSetBy = Automatic

        column name
            dataType: string
            lineageTag: b32da207-2448-4796-9708-18a587449624
            summarizeBy: none
            sourceColumn: Name
            annotation SummarizationSetBy = Automatic

        column total sales
            dataType: float
            lineageTag: 58bb60c8-e885-4ac2-bc0e-f6393e849879
            summarizeBy: sum
            sourceColumn: [Total Sales]
            annotation SummarizationSetBy = Automatic

        column total units
            dataType: int64
            lineageTag: ef0e70b5-ecc9-4b85-9178-e16952789244
            summarizeBy: sum
            sourceColumn: [Total Units]
            annotation SummarizationSetBy = Automatic

        partition Employees
            mode: import
            source =
                let
                    Source = [lib://DataFiles/dataset.xlsx],
                    Table = Table.FromFile(Source, [name = 'Employees'])
                in
                    Table
        partition Sales
            mode: import
            source =
                let
                    Source = [lib://DataFiles/dataset.xlsx],
                    Table = Table.FromFile(Source, [name = 'Sales'])
                in
                    Table
        partition Locations
            mode: import
            source =
                let
                    Source = [lib://DataFiles/dataset.xlsx],
                    Table = Table.FromFile(Source, [name = 'Locations'])
                in
                    Table
        annotation PBI_NavigationStepName = Navigation
        annotation PBI_ResultType = Table
        measure 'Best Performing Employee (Highest Sales)' = FirstSortedValue([employee-sales], -Aggr(SUM([total sales]), [employee-sales]))
          formatString: #,0
          lineageTag: 56a94573-3adf-4263-a7ce-68b4f7c32e8f
        measure 'Highest Sales Location' = FirstSortedValue([employee-sales], -Aggr(SUM([total sales]), [employee-sales]))
          formatString: #,0
          lineageTag: e456d221-37ef-43cb-b1fc-b7e165e11607
        measure 'Sales per Day' = SUM([total sales]) / COUNT(DISTINCT [date])
          formatString: #,0.00
          lineageTag: f29af98c-e48d-4907-b511-89a8230c9d91
        measure 'Units Sold per Transaction' = SUM([total units]) / COUNT([total units])
          formatString: #,0
          lineageTag: a6422e0b-009c-404b-8702-3f028f077220
        measure 'Sales per Employee per Location' = SUM([total sales]) / COUNT(DISTINCT [employee-sales])
          formatString: #,0.00
          lineageTag: f703d159-4339-41c4-8c5e-9235461b08f6
```