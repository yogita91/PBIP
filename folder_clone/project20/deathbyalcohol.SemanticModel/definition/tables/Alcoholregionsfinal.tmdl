```yaml
createOrReplace

    table Main
        lineageTag: 74f30f5d-251e-4df4-aade-f46cfb7a4fb1
        column 'date'
            dataType: datetime
            lineageTag: 74f84ab4-5610-4a12-bf85-102c34d89104
            summarizeBy: none
            sourceColumn: date
            annotation SummarizationSetBy = Automatic

        column 'Employee-Sales'
            dataType: string
            lineageTag: 71e1d843-e454-4b2a-b32d-cdb44e9c580f
            summarizeBy: none
            sourceColumn: EmpID
            annotation SummarizationSetBy = Automatic

        column Name
            dataType: string
            lineageTag: 15e73428-b1a7-43cf-a44f-5576f8883f15
            summarizeBy: none
            sourceColumn: Name
            annotation SummarizationSetBy = Automatic

        column 'Location-Sales'
            dataType: string
            lineageTag: c64cfcc4-fb37-4c6e-91c6-b342623617cb
            summarizeBy: none
            sourceColumn: LocId
            annotation SummarizationSetBy = Automatic

        partition Employees = m
            mode: import
            source =
                let
                    Source = [lib://DataFiles/dataset.xlsx],
                    SheetName = 'Employees'
                in
                    [EmpID] AS [Employee-Sales],
                    [Name]

        partition Sales = m
            mode: import
            source =
                let
                    Source = [lib://DataFiles/dataset.xlsx],
                    SheetName = 'Sales'
                in
                    [EmpID] AS [Employee-Sales],
                    [LocId] AS [Location-Sales],
                    Date(Date#([Date], 'DD/MM/YYYY')) AS [Date],
                    [Total Sales],
                    [Total Units]

        partition Locations = m
            mode: import
            source =
                let
                    Source = [lib://DataFiles/dataset.xlsx],
                    SheetName = 'Locations'
                in
                    [LocId] AS [Location-Sales],
                    [City],
                    APPLYMAP('__cityKey2GeoPoint', APPLYMAP('__cityName2Key', LOWER([City])), '-') AS [Locations.City_GeoInfo]

        measure 'Best Performing Employee (Highest Sales)' = FirstSortedValue([Employee-Sales], -Aggr(SUM([Total Sales]), 'Employee-Sales'))
          formatString: 0.00
          lineageTag: c81f53cc-7075-4712-bce4-e58c34b396f0

        measure 'Highest Sales Location' = FirstSortedValue([Employee-Sales], -Aggr(SUM([Total Sales]), 'Employee-Sales'))
          formatString: 0.00
          lineageTag: d08a681f-042c-4aa7-a1bb-f7c434c96cd8

        measure 'Sales per Day' = SUM([Total Sales]) / COUNT(DISTINCT [Date])
          formatString: 0.00
          lineageTag: 27677f08-1da0-47ef-9116-23956bb32969

        measure 'Units Sold per Transaction' = SUM([Total Units]) / COUNT([Total Units])
          formatString: 0.00
          lineageTag: b2065d53-b169-4b46-927b-644b6f85bc58

        measure 'Sales per Employee per Location' = SUM([Total Sales]) / COUNT(DISTINCT [Employee-Sales])
          formatString: 0.00
          lineageTag: d3f6224b-77d7-4d57-bbba-cbe045d123aa

        annotation PBI_NavigationStepName = Main
        annotation PBI_ResultType = Table
```