```yaml
createOrReplace

    table Main
        lineageTag: f5e8df59-3462-45e4-a602-f3b30803de14
        column name
            dataType: string
            lineageTag: 5c8670d6-bd62-472c-b89b-22da15e19b4b
            summarizeBy: none
            sourceColumn: name
            annotation SummarizationSetBy = Automatic

        partition __cityAliasesBase = m
            mode: import
            source =
                let
                    Source = [lib://DataFiles/cityAliases.qvd],
                    Type = qvd
                in
                    Source
        partition __cityGeoBase = m
            mode: import
            source =
                let
                    Source = [lib://DataFiles/cityGeo.qvd],
                    Type = qvd
                in
                    Source
        partition __cityName2Key = m
            mode: import
            source =
                let
                    Source = MAPPING LOAD __City, __geoKey RESIDENT __cityAliasesBase
                in
                    Source
        partition __cityKey2GeoPoint = m
            mode: import
            source =
                let
                    Source = MAPPING LOAD __geoKey, __GeoPoint RESIDENT __cityGeoBase
                in
                    Source
        partition Employees = m
            mode: import
            source =
                let
                    Source = LOAD [EmpID] AS [Employee-Sales], [Name] FROM [lib://DataFiles/dataset.xlsx] (ooxml, embedded labels, table is Employees)
                in
                    Source
        partition Sales = m
            mode: import
            source =
                let
                    Source = LOAD [EmpID] AS [Employee-Sales], [LocId] AS [Location-Sales], Date(Date#([Date], 'DD/MM/YYYY')) AS [Date], [Total Sales], [Total Units] FROM [lib://DataFiles/dataset.xlsx] (ooxml, embedded labels, table is Sales)
                in
                    Source
        partition Locations = m
            mode: import
            source =
                let
                    Source = LOAD [LocId] AS [Location-Sales], [City], APPLYMAP('__cityKey2GeoPoint', APPLYMAP('__cityName2Key', LOWER([City])), '-') AS [Locations.City_GeoInfo] FROM [lib://DataFiles/dataset.xlsx] (ooxml, embedded labels, table is Locations)
                in
                    Source
        annotation PBI_ResultType = Table
        measures:
          - name: 'Best Performing Employee (Highest Sales)'
            expression: FirstSortedValue([Employee-Sales], -Aggr(SUM([Total Sales]), [Employee-Sales]))
            formatString: U
            lineageTag: 93ed5d7f-cd81-45e9-bf69-d9f452659c5d
          - name: 'Highest Sales Location'
            expression: FirstSortedValue([Employee-Sales], -Aggr(SUM([Total Sales]), [Employee-Sales]))
            formatString: U
            lineageTag: 7f87fb9d-1894-43d0-865e-f48fdd67e61c
          - name: 'Sales per Day'
            expression: SUM([Total Sales]) / COUNT(DISTINCT [Date])
            formatString: U
            lineageTag: d401bc59-4f83-47f5-8dbd-f44171e8297a
          - name: 'Units Sold per Transaction'
            expression: SUM([Total Units]) / COUNT([Total Units])
            formatString: U
            lineageTag: a5179d29-40b8-4516-b80a-690517bded05
          - name: 'Sales per Employee per Location'
            expression: SUM([Total Sales]) / COUNT(DISTINCT [Employee-Sales])
            formatString: U
            lineageTag: cfd4e444-d26d-4dd9-a774-5035305b9630
```