```yaml
createOrReplace

    table Main
        lineageTag: UfLpDx
        column 'City'
            dataType: string
            lineageTag: c9f6e57f-e3d4-41d6-a75f-dfee9b6d589d
            summarizeBy: none
            sourceColumn: City
            annotation SummarizationSetBy = Automatic
            
        column 'Employee-Sales'
            dataType: string
            lineageTag: 0a7498bc-6b70-4678-80b1-b155ba643a5f
            summarizeBy: none
            sourceColumn: EmpID
            annotation SummarizationSetBy = Automatic
            
        column 'Total Sales'
            dataType: float
            lineageTag: c1a312c7-2eeb-4328-b756-1aa804571334
            summarizeBy: sum
            sourceColumn: Total Sales
            annotation SummarizationSetBy = Automatic
            
        column 'Date'
            dataType: datetime
            lineageTag: 123d45e9-d5fd-4588-af84-90c912ab848d
            summarizeBy: none
            sourceColumn: Date
            annotation SummarizationSetBy = Automatic

        partition __cityAliasesBase = m
            mode: import
            source =
                let
                    Source = [lib://DataFiles/cityAliases.qvd],
                    geoKey AS [__geoKey],
                    CountryCode AS [__CityCountryCode]
                in
                    Source
        
        partition __cityGeoBase = m
            mode: import
            source =
                let
                    Source = [lib://DataFiles/cityGeo.qvd],
                    geoKey AS [__geoKey],
                    geoPoint AS [__GeoPoint]
                in
                    Source

        partition 'Employees' = m
            mode: import
            source =
                let
                    Source = [lib://DataFiles/dataset.xlsx],
                    'Employees'
                in
                    Source

        partition 'Sales' = m
            mode: import
            source =
                let
                    Source = [lib://DataFiles/dataset.xlsx],
                    'Sales'
                in
                    Source

        partition 'Locations' = m
            mode: import
            source =
                let
                    Source = [lib://DataFiles/dataset.xlsx],
                    'Locations'
                in
                    Source

        measure 'Best Performing Employee (Highest Sales)' = FirstSortedValue([Employee-Sales], -Aggr(SUM([Total Sales]), EmpID))
          formatString: U
          lineageTag: d9a30880-e84c-40cf-8924-2042eb73cd52
          
        measure 'Highest Sales Location' = FirstSortedValue([Employee-Sales], -Aggr(SUM([Total Sales]), EmpID))
          formatString: U
          lineageTag: 60d18f47-b897-4180-9671-df2e80e204af

        measure 'Sales per Day' = SUM([Total Sales]) / COUNT(DISTINCT [Date])
          formatString: U
          lineageTag: 1f78466d-a55c-471c-a43f-0d71c5720541
          
        measure 'Units Sold per Transaction' = SUM([Total Units]) / COUNT([Total Units])
          formatString: U
          lineageTag: 998ed85f-a6bc-48e6-8044-89c02799cc06

        measure 'Sales per Employee per Location' = SUM([Total Sales]) / COUNT(DISTINCT [Employee-Sales])
          formatString: U
          lineageTag: 67bc9e4c-a664-4690-abc0-d5861cb994ef
```