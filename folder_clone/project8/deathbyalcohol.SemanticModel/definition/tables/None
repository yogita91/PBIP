```yaml
createOrReplace

    table Main
        lineageTag: a59e870d-8267-4c32-b56f-b9983fb91598
        column city
            dataType: string
            lineageTag: a22405ac-e924-4ea2-b1c3-30972dbd9b77
            summarizeBy: none
            sourceColumn: City
            annotation SummarizationSetBy = Automatic

        column date
            dataType: datetime
            lineageTag: 5e06521a-8c1e-42bb-a97a-2ff8c327f033
            summarizeBy: none
            sourceColumn: Date
            annotation SummarizationSetBy = Automatic

        column total_sales
            dataType: float
            lineageTag: 8d6f5879-4e9f-4940-b633-e5b80526cc68
            summarizeBy: sum
            sourceColumn: Total Sales
            annotation SummarizationSetBy = Automatic

        column total_units
            dataType: int64
            lineageTag: e9387090-fce0-4413-a13f-e45a47a37b9f
            summarizeBy: sum
            sourceColumn: Total Units
            annotation SummarizationSetBy = Automatic

        column employee_sales
            dataType: string
            lineageTag: c6ea54cf-61b2-4040-8eb9-8fa751b58810
            summarizeBy: none
            sourceColumn: Employee-Sales
            annotation SummarizationSetBy = Automatic

        partition Employees = m
            mode: import
            source =
                let
                    Source = Excel.Workbook("lib://DataFiles/dataset.xlsx", null, true),
                    Employees = Source{[Item="Employees", Kind="Table"]}[Data]
                in
                    Employees
        partition Sales = m
            mode: import
            source =
                let
                    Source = Excel.Workbook("lib://DataFiles/dataset.xlsx", null, true),
                    Sales = Source{[Item="Sales", Kind="Table"]}[Data]
                in
                    Sales
        partition Locations = m
            mode: import
            source =
                let
                    Source = Excel.Workbook("lib://DataFiles/dataset.xlsx", null, true),
                    Locations = Source{[Item="Locations", Kind="Table"]}[Data]
                in
                    Locations
        annotation PBI_NavigationStepName = Data
        annotation PBI_ResultType = Table
        measure 'Best Performing Employee (Highest Sales)' = FirstSortedValue('Employees'[Employee-Sales], -Aggr(SUM('Sales'[Total Sales]), 'Employees'[EmpID]))
          formatString: U
          lineageTag: f344bc43-e920-41f6-8605-865021fb2cc4
        measure 'Highest Sales Location' = FirstSortedValue('Locations'[City], -Aggr(SUM('Sales'[Total Sales]), 'Sales'[Location-Sales]))
          formatString: U
          lineageTag: a431bc9b-3341-414e-b9fa-a22360566357
        measure 'Sales per Day' = SUM('Sales'[Total Sales]) / COUNT(DISTINCT 'Sales'[Date])
          formatString: $ #,0
          lineageTag: 121bd594-5ed0-4517-9a68-54327decc393
        measure 'Units Sold per Transaction' = SUM('Sales'[Total Units]) / COUNT('Sales'[Total Units])
          formatString: 0
          lineageTag: 52386cf3-a376-41c3-b006-c391b2e2b103
        measure 'Sales per Employee per Location' = SUM('Sales'[Total Sales]) / COUNT(DISTINCT 'Sales'[Employee-Sales])
          formatString: $ #,0
          lineageTag: b440ce73-cdbc-497e-b818-b18cbab1ab11
```