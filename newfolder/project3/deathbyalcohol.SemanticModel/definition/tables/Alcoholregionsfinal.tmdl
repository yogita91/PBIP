```yaml
createOrReplace

    table Main
        lineageTag: aac12345-6789-1234-5678-90abcdef1234
        column ThousandSep
            dataType: string
            lineageTag: b7c111c1-21d7-456a-b214-123c45abcdef
            summarizeBy: none
            sourceColumn: ThousandSep
            annotation SummarizationSetBy = Automatic
        column DecimalSep
            dataType: string
            lineageTag: 1e2f3g4h-5i6j-7890-k1l2-3mno4pqrstuv
            summarizeBy: none
            sourceColumn: DecimalSep
            annotation SummarizationSetBy = Automatic
        column MoneyThousandSep
            dataType: string
            lineageTag: ab12cd34-ef56-gh78-ij90-klmn123456op
            summarizeBy: none
            sourceColumn: MoneyThousandSep
            annotation SummarizationSetBy = Automatic
        column MoneyDecimalSep
            dataType: string
            lineageTag: c12d34e5-f67g-h89i-j01k-lmno234567pq
            summarizeBy: none
            sourceColumn: MoneyDecimalSep
            annotation SummarizationSetBy = Automatic
        column MoneyFormat
            dataType: string
            lineageTag: opq12r34-s56t-u78v-w90x-123y456z7890
            summarizeBy: none
            sourceColumn: MoneyFormat
            annotation SummarizationSetBy = Automatic
        column TimeFormat
            dataType: string
            lineageTag: 2345abcd-6789-ef01-2345-ghijklmnopqr
            summarizeBy: none
            sourceColumn: TimeFormat
            annotation SummarizationSetBy = Automatic
        column DateFormat
            dataType: string
            lineageTag: efgh1234-5678-ijkl-90mn-opqrstuvwxy
            summarizeBy: none
            sourceColumn: DateFormat
            annotation SummarizationSetBy = Automatic
        column TimestampFormat
            dataType: string
            lineageTag: vwxyz123-456a-bcde-fghi-jklmnopqrst
            summarizeBy: none
            sourceColumn: TimestampFormat
            annotation SummarizationSetBy = Automatic
        column FirstWeekDay
            dataType: int64
            lineageTag: 12ab34cd-ef56-gh78-ijkl-90mnopqrstuv
            summarizeBy: sum
            sourceColumn: FirstWeekDay
            annotation SummarizationSetBy = Automatic
        column BrokenWeeks
            dataType: int64
            lineageTag: qrst1234-5678-90ab-cdef-ghijklmno123
            summarizeBy: sum
            sourceColumn: BrokenWeeks
            annotation SummarizationSetBy = Automatic
        partition Employees
            mode: import
            source =
                let
                    Source = [lib://DataFiles/dataset.xlsx],
                    ChangedType = Table.TransformColumnTypes(Source,{{"EmpID", type text}, {"Name", type text}})
                in
                    ChangedType
        partition Sales
            mode: import
            source =
                let
                    Source = [lib://DataFiles/dataset.xlsx],
                    ChangedType = Table.TransformColumnTypes(Source,{{"EmpID", type text}, {"LocId", type text}, {"Date", type date}, {"Total Sales", type number}, {"Total Units", type number}})
                in
                    ChangedType
        partition Locations
            mode: import
            source =
                let
                    Source = [lib://DataFiles/dataset.xlsx],
                    ChangedType = Table.TransformColumnTypes(Source,{{"LocId", type text}, {"City", type text}})
                in
                    ChangedType
        annotation PBI_ResultType = Table
        measures:
          - name: 'Best Performing Employee (Highest Sales)'
            expression: 'FirstSortedValue([Employee-Sales], -Aggr(SUM([Total Sales]), EmpID))'
            formatString: '0'
            lineageTag: abc12345-6789-ef01-2345-ghijklmnopqr
          - name: 'Highest Sales Location'
            expression: 'FirstSortedValue([Employee-Sales], -Aggr(SUM([Total Sales]), EmpID))'
            formatString: '0'
            lineageTag: 456defgh-6789-ijk0-1234-lmnopqrstu
          - name: 'Sales per Day'
            expression: 'SUM([Total Sales]) / COUNT(DISTINCT [Date])'
            formatString: '0.00'
            lineageTag: 1234ghijk-5678-lmno-90pq-rstuvwxyz
          - name: 'Units Sold per Transaction'
            expression: 'SUM([Total Units]) / COUNT([Total Units])'
            formatString: '0'
            lineageTag: uvwx1234-5678-yzab-cdef-ghijklmnop
          - name: 'Sales per Employee per Location'
            expression: 'SUM([Total Sales]) / COUNT(DISTINCT [Employee-Sales])'
            formatString: '0'
            lineageTag: 1a2b3c4d-5678-90ab-cdef-ghijklmnopq
```